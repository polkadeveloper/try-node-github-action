name: Prueba de CI/CD
env:
  VERCEL_ORG_ID: ${{secrets.VERCEL_ORG_ID}}
  VERCEL_PROJECT_ID: ${{secrets.VERCEL_PROJECT_ID}}
on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, edited]

jobs:
  Linter:
    runs-on: ubuntu-20.04

    steps:
      - name: Chekout Repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 7
      - name: Install Dependencies
        run: pnpm install
      - name: Run Linter
        run: pnpm lint

  Tests:
    runs-on: ubuntu-20.04

    steps:
      - name: Chekout Repository
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - name: Install pnpm
        uses: pnpm/action-setup@v3
        with:
          version: 7
      - name: Install Dependencies
        run: pnpm install
      - name: Run Tests
        run: pnpm test

  Deploy-Production:
    needs: [Linter, Tests]
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20
      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{secrets.VERCEL_TOKEN}}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{secrets.VERCEL_TOKEN}}
      - name: Deploy Project Artifacts to Vercel
        run: vercel deploy --prebuilt --prod --token=${{secrets.VERCEL_TOKEN}}
